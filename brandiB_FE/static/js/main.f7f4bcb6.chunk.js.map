{"version":3,"sources":["containers/Home.js","containers/Login.js","containers/Profile.js","containers/Logout.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","Component","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","loginState","defineProperty","target","id","value","handleSubmit","preventDefault","username","state","password","axios","post","proxyurl","then","res","console","log","data","catch","err","length","alert","sessionStorage","setItem","react_router","to","react_router_dom","exact","path","onSubmit","FormGroup","ControlLabel","htmlFor","FormControl","type","placeholder","name","onChange","disabled","validateForm","sessionName","getItem","document","getElementById","innerHTML","logState","logstate","Routes","component","Profile","Logout","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f7f4bcb6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Home.css\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <div className=\"lander\">\n          <h1>Scratch</h1>\n          <p>A simple note taking app</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport { Redirect } from 'react-router-dom'\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loginState: \"idle\"\n    };\n  }\n\n  validateForm() {\n    return this.state.username.length > 0 && this.state.password.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({ loginState: 'loggingIn' })\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.setState({ loginState: 'loggingIn' })\n\n    const username = this.state.username\n\n    const password = this.state.password\n\n    const proxyurl = \"http://cors-anywhere.herokuapp.com/\";\n    axios.post(proxyurl + 'http://brandi.ipt.pt/api/auth', { username, password })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n\n        if(res.data === \"Incorrect Username and/or Password!\"){\n          this.setState({ loginState: 'error' })\n        }else{\n          this.setState({ loginState: 'success' })\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n\n    if (this.state.loginState === \"error\") {\n        alert(\"Wrong login information\")\n    } else if (this.state.loginState === \"success\"){\n      sessionStorage.setItem(\"username\", this.state.username);\n      sessionStorage.setItem(\"loginState\", this.state.loginState);\n      return <Redirect to='/profile' />\n    }\n\n    return (\n      /*\n      <div className=\"Login\">\n        <form onSubmit={this.handleSubmit}>\n          <FormGroup controlId=\"username\" bsSize=\"large\">\n            <ControlLabel>Username</ControlLabel>\n            <FormControl\n              autoFocus\n              type=\"username\"\n              value={this.state.username}\n              onChange={this.handleChange}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            <ControlLabel>Password</ControlLabel>\n            <FormControl\n              value={this.state.password}\n              onChange={this.handleChange}\n              type=\"password\"\n            />\n          </FormGroup>\n          <Button\n            block\n            bsSize=\"large\"\n            disabled={!this.validateForm()}\n            type=\"submit\"\n          >\n            Login\n          </Button>\n        </form>\n      </div>*/\n      <Router>\n        <div className=\"App\">\n          <div className=\"App__Aside\" />\n          <div className=\"App__Form\">\n            <div className=\"FormTitle\">\n              <Link to=\"/login\" className=\"FormTitle__Link \">\n                Iniciar Sessao\n              </Link>\n            </div>\n            <Route exact path=\"/login\">\n              <div className=\"FormCenter\">\n                <form className=\"FormField \" onSubmit={this.handleSubmit}>\n                  <FormGroup className=\"FormField\">\n                    <ControlLabel className=\"FormField__Label\" htmlFor=\"name\">\n                      Username\n                    </ControlLabel>\n                    <FormControl\n                      type=\"username\"\n                      id=\"username\"\n                      value={this.state.username}\n                      className=\"FormField__Input\"\n                      placeholder=\"Insira o username\"\n                      name=\"username\"\n                      onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                  <FormGroup className=\"FormField\">\n                    <ControlLabel className=\"FormField__Label\" htmlFor=\"email\">\n                      password\n                    </ControlLabel>\n                    <FormControl\n                      type=\"password\"\n                      value={this.state.password}\n                      id=\"password\"\n                      className=\"FormField__Input\"\n                      placeholder=\"Insira a sua password\"\n                      name=\"password\"\n                      onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                  <div className=\"FormField\">\n                    <button className=\"FormField__Button mr-20\" disabled={!this.validateForm()} type=\"submit\">\n                      Iniciar sessao\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </Route>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Profile.css\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name : \"\"\n    };\n  }\n\n  componentDidMount(){\n    const sessionName = sessionStorage.getItem(\"username\");\n    this.setState({name: sessionName })\n    document.getElementById(\"header\").innerHTML = sessionName;\n  }\n\n  render() {\n\n    return (\n      <div className=\"Login\">\n        <h1 id = \"header\">test</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Logout.css\";\nimport { Redirect } from 'react-router-dom'\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logState: \"\"\n    };\n  }\n\n  componentDidMount(){\n    const loginState = sessionStorage.getItem(\"loginState\");\n    this.setState({ logState: loginState })\n    alert(this.state.loginState);\n    if(this.state.logstate === \"success\"){\n      sessionStorage.setItem(\"loginState\", \"idle\");\n      //alert(\"logged out\");\n      return <Redirect to='/'/>\n    }else{\n      //alert(\"you are still logged in\");\n      return <Redirect to='/profile'/>\n    }\n  }\n\n  render() {\n    return (  \n      <h1 id = \"header\">Log Out</h1>\n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./containers/Home\";\nimport Login from \"./containers/Login\";\nimport Profile from \"./containers/Profile\";\nimport Logout from \"./containers/Logout\";\n\nexport default () =>\n  <Switch>\n    <Route path=\"/\" exact component={Home} />\n    <Route path=\"/login\" exact component={Login} />\n    <Route path=\"/profile\" exact component={Profile} />\n    <Route path=\"/logout\" exact component={Logout} />\n  </Switch>;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Routes />\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n    document.getElementById(\"root\")\n  );\n  \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}