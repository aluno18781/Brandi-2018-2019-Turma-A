{"version":3,"sources":["containers/Login.js","containers/Profile.js","containers/Logout.js","containers/FichaTecnica.js","containers/Managing/Menu.js","containers/Managing/Add.js","containers/Managing/Remove.js","containers/Managing/Consultar.js","containers/Managing/Edit.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","loginState","defineProperty","target","id","value","handleSubmit","preventDefault","username","state","password","axios","post","then","res","console","log","data","catch","err","length","alertBox","document","getElementById","removeChild","x","createElement","className","y","innerText","appendChild","sessionStorage","setItem","react_default","a","react_router","to","react_router_dom","exact","path","onSubmit","FormGroup","ControlLabel","htmlFor","FormControl","type","placeholder","name","onChange","disabled","validateForm","Component","doLogout","history","push","sessionName","getItem","innerHTML","onClick","logState","alert","Add","Consultar","Remove","Edit","Routes","component","Profile","Logout","FichaTecnica","Menu","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qbAOqBA,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAaRQ,aAAe,SAAAC,GACbR,EAAKS,SAAS,CAAEC,WAAY,cAC5BV,EAAKS,SAALR,OAAAU,EAAA,EAAAV,CAAA,GACGO,EAAMI,OAAOC,GAAKL,EAAMI,OAAOE,SAjBjBd,EAqBnBe,aAAe,SAAAP,GACbA,EAAMQ,iBAENhB,EAAKS,SAAS,CAAEC,WAAY,cAE5B,IAAMO,EAAWjB,EAAKkB,MAAMD,SAEtBE,EAAWnB,EAAKkB,MAAMC,SAG5BC,IAAMC,KAAyC,YAAa,CAAEJ,WAAUE,aACrEG,KAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAIG,MAEA,wCAAbH,EAAIG,KACL1B,EAAKS,SAAS,CAAEC,WAAY,UAE5BV,EAAKS,SAAS,CAAEC,WAAY,cAG/BiB,MAAM,SAAAC,GACLJ,QAAQC,IAAIG,MAxChB5B,EAAKkB,MAAQ,CACXD,SAAU,GACVE,SAAU,GACVT,WAAY,QANGV,8EAWjB,OAAOG,KAAKe,MAAMD,SAASY,OAAS,GAAK1B,KAAKe,MAAMC,SAASU,OAAS,mCAsCtE,IAAIC,EAAWC,SAASC,eAAe,YAIvC,GAHe,MAAZF,GACDC,SAASC,eAAe,UAAUC,YAAYH,GAElB,UAA1B3B,KAAKe,MAAMR,WAAwB,CACrC,IAAIwB,EAAIH,SAASI,cAAc,OAC/BD,EAAEE,UAAU,qBACZF,EAAErB,GAAK,WACP,IAAIwB,EAAIN,SAASI,cAAc,UAC/BE,EAAEC,UAAY,0BACdJ,EAAEK,YAAYF,GACdN,SAASC,eAAe,UAAUO,YAAYL,QACzC,GAA8B,YAA1B/B,KAAKe,MAAMR,WAGpB,OAFA8B,eAAeC,QAAQ,WAAYtC,KAAKe,MAAMD,UAC9CuB,eAAeC,QAAQ,aAActC,KAAKe,MAAMR,YACzCgC,EAAAC,EAAAR,cAACS,EAAA,EAAD,CAAUC,GAAG,UAGtB,OACEH,EAAAC,EAAAR,cAACW,EAAA,EAAD,KACEJ,EAAAC,EAAAR,cAAA,OAAKC,UAAU,OACbM,EAAAC,EAAAR,cAAA,OAAKC,UAAU,eACfM,EAAAC,EAAAR,cAAA,OAAKC,UAAU,aACbM,EAAAC,EAAAR,cAAA,OAAKC,UAAU,aACbM,EAAAC,EAAAR,cAACW,EAAA,EAAD,CAAMD,GAAG,SAAST,UAAU,oBAA5B,mBAIFM,EAAAC,EAAAR,cAACS,EAAA,EAAD,CAAOG,OAAK,EAACC,KAAK,UAChBN,EAAAC,EAAAR,cAAA,OAAKC,UAAU,cACbM,EAAAC,EAAAR,cAAA,QAAMC,UAAU,aAAaa,SAAU9C,KAAKY,cAC1C2B,EAAAC,EAAAR,cAACe,EAAA,EAAD,CAAWd,UAAU,aACnBM,EAAAC,EAAAR,cAACgB,EAAA,EAAD,CAAcf,UAAU,mBAAmBgB,QAAQ,QAAnD,YAGAV,EAAAC,EAAAR,cAACkB,EAAA,EAAD,CACEC,KAAK,WACLzC,GAAG,WACHC,MAAOX,KAAKe,MAAMD,SAClBmB,UAAU,mBACVmB,YAAY,oBACZC,KAAK,WACLC,SAAUtD,KAAKI,gBAGnBmC,EAAAC,EAAAR,cAACe,EAAA,EAAD,CAAWd,UAAU,aACnBM,EAAAC,EAAAR,cAACgB,EAAA,EAAD,CAAcf,UAAU,mBAAmBgB,QAAQ,SAAnD,YAGAV,EAAAC,EAAAR,cAACkB,EAAA,EAAD,CACEC,KAAK,WACLxC,MAAOX,KAAKe,MAAMC,SAClBN,GAAG,WACHuB,UAAU,mBACVmB,YAAY,wBACZC,KAAK,WACLC,SAAUtD,KAAKI,gBAGnBmC,EAAAC,EAAAR,cAAA,OAAKtB,GAAG,SAASuB,UAAU,aACzBM,EAAAC,EAAAR,cAAA,UAAQC,UAAU,0BAA0BsB,UAAWvD,KAAKwD,eAAgBL,KAAK,UAAjF,gCA9GeM,aCJd9D,sBACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAaR8D,SAAW,SAAArD,GACTR,EAAKD,MAAM+D,QAAQC,KAAK,YAZxB/D,EAAKkB,MAAQ,CACXsC,KAAO,IAJQxD,mFASjB,IAAMgE,EAAcxB,eAAeyB,QAAQ,YAC3C9D,KAAKM,SAAS,CAAC+C,KAAMQ,IACrBjC,SAASC,eAAe,UAAUkC,UAAYF,mCAS9C,OACEtB,EAAAC,EAAAR,cAAA,OAAKC,UAAU,SACbM,EAAAC,EAAAR,cAAA,MAAItB,GAAK,UAAT,QACA6B,EAAAC,EAAAR,cAAA,UAAQgC,QAAWhE,KAAK0D,UAAxB,kBAxB2BD,cCAd9D,sBACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDmB,MAAQ,CACXkD,SAAU,gBAJKpE,mFASjB,IAAMU,EAAa8B,eAAeyB,QAAQ,cAC1CzC,QAAQC,IAAIf,GACM,YAAfA,GACD8B,eAAeC,QAAQ,aAAc,QACrC4B,MAAM,cACNlE,KAAKJ,MAAM+D,QAAQC,KAAK,OAGxBM,MAAM,yBACNlE,KAAKJ,MAAM+D,QAAQC,KAAK,4CAI1B,OAAMrB,EAAAC,EAAAR,cAAA,mBAvByByB,cCAd9D,2LAIjB,OACE4C,EAAAC,EAAAR,cAACW,EAAA,EAAD,KACEJ,EAAAC,EAAAR,cAAA,OAAKC,UAAU,QACbM,EAAAC,EAAAR,cAAA,OAAKC,UAAU,cACbM,EAAAC,EAAAR,cAAA,OAAKC,UAAU,aACbM,EAAAC,EAAAR,cAACW,EAAA,EAAD,CAAMD,GAAG,gBAAgBT,UAAU,oBAAnC,qBAIFM,EAAAC,EAAAR,cAACS,EAAA,EAAD,CAAOG,OAAK,EAACC,KAAK,iBAChBN,EAAAC,EAAAR,cAAA,OAAKC,UAAU,cACTM,EAAAC,EAAAR,cAAA,UAAQC,UAAU,0BAA0BkB,KAAK,UAAjD,oCAfeM,cCAd9D,sBACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAIRuE,IAAM,SAAA9D,GACJR,EAAKD,MAAM+D,QAAQC,KAAK,SANP/D,EASnBuE,UAAY,SAAA/D,GACVR,EAAKD,MAAM+D,QAAQC,KAAK,eAVP/D,EAanBwE,OAAS,SAAAhE,GACPR,EAAKD,MAAM+D,QAAQC,KAAK,YAdP/D,EAiBnByE,KAAO,SAAAjE,GACLR,EAAKD,MAAM+D,QAAQC,KAAK,UAlBP/D,wEAuBjB,OACE0C,EAAAC,EAAAR,cAAA,WACEO,EAAAC,EAAAR,cAAA,UAAQgC,QAAWhE,KAAKmE,KAAxB,2BACA5B,EAAAC,EAAAR,cAAA,UAAQgC,QAAWhE,KAAKoE,WAAxB,2BACA7B,EAAAC,EAAAR,cAAA,UAAQgC,QAAWhE,KAAKqE,QAAxB,yBACA9B,EAAAC,EAAAR,cAAA,UAAQgC,QAAWhE,KAAKsE,MAAxB,gCA7B2Bb,cCAd9D,sBACnB,SAAAA,EAAYC,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAAAG,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KACZJ,0EAMN,OACE2C,EAAAC,EAAAR,cAAA,WACEO,EAAAC,EAAAR,cAAA,+BAV2ByB,cCAd9D,sBACnB,SAAAA,EAAYC,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAAAG,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KACZJ,0EAKN,OACE2C,EAAAC,EAAAR,cAAA,WACEO,EAAAC,EAAAR,cAAA,6BAT2ByB,cCAd9D,sBACnB,SAAAA,EAAYC,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAAAG,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KACZJ,0EAMN,OACE2C,EAAAC,EAAAR,cAAA,WACEO,EAAAC,EAAAR,cAAA,+BAV2ByB,cCAd9D,sBACnB,SAAAA,EAAYC,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GAAAG,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KACZJ,0EAMN,OACE2C,EAAAC,EAAAR,cAAA,WACEO,EAAAC,EAAAR,cAAA,4BAV2ByB,cCSpBc,EAAA,kBACbhC,EAAAC,EAAAR,cAACS,EAAA,EAAD,KACEF,EAAAC,EAAAR,cAACS,EAAA,EAAD,CAAOI,KAAK,IAAID,OAAK,EAAC4B,UAAW7E,IACjC4C,EAAAC,EAAAR,cAACS,EAAA,EAAD,CAAOI,KAAK,SAASD,OAAK,EAAC4B,UAAW7E,IACtC4C,EAAAC,EAAAR,cAACS,EAAA,EAAD,CAAOI,KAAK,WAAWD,OAAK,EAAC4B,UAAWC,IACxClC,EAAAC,EAAAR,cAACS,EAAA,EAAD,CAAOI,KAAK,UAAUD,OAAK,EAAC4B,UAAWE,IACvCnC,EAAAC,EAAAR,cAACS,EAAA,EAAD,CAAOI,KAAK,gBAAgBD,OAAK,EAAC4B,UAAWG,IAC7CpC,EAAAC,EAAAR,cAACS,EAAA,EAAD,CAAOI,KAAK,QAAQD,OAAK,EAAC4B,UAAWI,IACrCrC,EAAAC,EAAAR,cAACS,EAAA,EAAD,CAAOI,KAAK,OAAOD,OAAK,EAAC4B,UAAWL,IACpC5B,EAAAC,EAAAR,cAACS,EAAA,EAAD,CAAOI,KAAK,UAAUD,OAAK,EAAC4B,UAAWH,IACvC9B,EAAAC,EAAAR,cAACS,EAAA,EAAD,CAAOI,KAAK,aAAaD,OAAK,EAAC4B,UAAWJ,IAC1C7B,EAAAC,EAAAR,cAACS,EAAA,EAAD,CAAOI,KAAK,QAAQD,OAAK,EAAC4B,UAAWF,MCX1BO,mLANX,OACEtC,EAAAC,EAAAR,cAACuC,EAAD,aAHYd,aCQEqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACL7C,EAAAC,EAAAR,cAACW,EAAA,EAAD,KACEJ,EAAAC,EAAAR,cAACqD,EAAD,OAEFzD,SAASC,eAAe,SDsHtB,kBAAmByD,WACrBA,UAAUC,cAAcC,MAAMrE,KAAK,SAAAsE,GACjCA,EAAaC","file":"static/js/main.7b84b6f9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport { Redirect } from 'react-router-dom'\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loginState: \"idle\"\n    };\n  }\n\n  validateForm() {\n    return this.state.username.length > 0 && this.state.password.length > 0;\n  }\n\n  handleChange = event => {\n    this.setState({ loginState: 'loggingIn' })\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.setState({ loginState: 'loggingIn' })\n\n    const username = this.state.username\n\n    const password = this.state.password\n\n    //const proxyurl = \"http://cors-anywhere.herokuapp.com/\";\n    axios.post(/*proxyurl + 'http://brandi.ipt.pt*/'/api/auth', { username, password })\n      .then(res => {\n        console.log(res);\n        console.log(res.data);\n\n        if(res.data === \"Incorrect Username and/or Password!\"){\n          this.setState({ loginState: 'error' })\n        }else{\n          this.setState({ loginState: 'success' })\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render() {\n\n    let alertBox = document.getElementById(\"alertBox\");\n    if(alertBox != null){\n      document.getElementById(\"divBtn\").removeChild(alertBox);\n    }\n    if (this.state.loginState === \"error\") {\n      let x = document.createElement(\"div\");\n      x.className=\"alert alert-danger\";\n      x.id = \"alertBox\"\n      let y = document.createElement(\"strong\")\n      y.innerText = \"Wrong username/password\";\n      x.appendChild(y);\n      document.getElementById(\"divBtn\").appendChild(x);\n    } else if (this.state.loginState === \"success\"){\n      sessionStorage.setItem(\"username\", this.state.username);\n      sessionStorage.setItem(\"loginState\", this.state.loginState);\n      return <Redirect to='/menu' />\n    }\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"App__Aside\" />\n          <div className=\"App__Form\">\n            <div className=\"FormTitle\">\n              <Link to=\"/login\" className=\"FormTitle__Link \">\n                Iniciar Sessao\n              </Link>\n            </div>\n            <Route exact path=\"/login\">\n              <div className=\"FormCenter\">\n                <form className=\"FormField \" onSubmit={this.handleSubmit}>\n                  <FormGroup className=\"FormField\">\n                    <ControlLabel className=\"FormField__Label\" htmlFor=\"name\">\n                      Username\n                    </ControlLabel>\n                    <FormControl\n                      type=\"username\"\n                      id=\"username\"\n                      value={this.state.username}\n                      className=\"FormField__Input\"\n                      placeholder=\"Insira o username\"\n                      name=\"username\"\n                      onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                  <FormGroup className=\"FormField\">\n                    <ControlLabel className=\"FormField__Label\" htmlFor=\"email\">\n                      password\n                    </ControlLabel>\n                    <FormControl\n                      type=\"password\"\n                      value={this.state.password}\n                      id=\"password\"\n                      className=\"FormField__Input\"\n                      placeholder=\"Insira a sua password\"\n                      name=\"password\"\n                      onChange={this.handleChange}\n                    />\n                  </FormGroup>\n                  <div id=\"divBtn\" className=\"FormField\">\n                    <button className=\"FormField__Button mr-20\" disabled={!this.validateForm()} type=\"submit\">\n                      Iniciar sessao\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </Route>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Profile.css\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name : \"\"\n    };\n  }\n\n  componentDidMount(){\n    const sessionName = sessionStorage.getItem(\"username\");\n    this.setState({name: sessionName })\n    document.getElementById(\"header\").innerHTML = sessionName;\n  }\n\n  doLogout = event =>{\n    this.props.history.push(\"/logout\");\n  }\n\n  render() {\n\n    return (\n      <div className=\"Login\">\n        <h1 id = \"header\">test</h1>\n        <button onClick = {this.doLogout}>Logout</button>\n      </div>   \n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Logout.css\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      logState: \"testLogState\"\n    };\n  }\n\n  componentDidMount(){\n    const loginState = sessionStorage.getItem(\"loginState\");\n    console.log(loginState);\n    if(loginState === \"success\"){\n      sessionStorage.setItem(\"loginState\", \"idle\");\n      alert(\"Logged out\");\n      this.props.history.push(\"/\");\n      \n    }else{\n      alert(\"You are not logged in\");\n      this.props.history.push(\"/login\");\n    }\n  }\n  render(){\n    return<div></div>\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./FichaTecnica.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nexport default class Login extends Component {\n\n  render() {\n\n    return (\n      <Router>\n        <div className=\"App2\">\n          <div className=\"App__Form2\">\n            <div className=\"FormTitle\">\n              <Link to=\"/fichatecnica\" className=\"FormTitle__Link \">\n                Ficha Técnica\n              </Link>\n            </div>\n            <Route exact path=\"/fichatecnica\">\n              <div className=\"FormCenter\">\n                    <button className=\"FormField__Button mr-20\" type=\"button\">\n                      Adicionar nova ficha\n                    </button>\n              </div>\n            </Route>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Menu.css\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  Add = event =>{\n    this.props.history.push(\"/add\");\n  }\n\n  Consultar = event =>{\n    this.props.history.push(\"/consultar\");\n  }\n\n  Remove = event =>{\n    this.props.history.push(\"/remove\");\n  }\n\n  Edit = event =>{\n    this.props.history.push(\"/edit\");\n  }\n\n  render() {\n\n    return (\n      <div >\n        <button onClick = {this.Add}>Adicionar ficha tecnica</button>\n        <button onClick = {this.Consultar}>Consultar ficha tecnica</button>\n        <button onClick = {this.Remove}>Remover ficha tecnica</button>\n        <button onClick = {this.Edit}>Editar ficha tecnica</button>\n      </div>   \n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Add.css\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n\n    return (\n      <div >\n        <h1>Adicionar</h1>\n      </div>   \n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Remove.css\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    return (\n      <div >\n        <h1>Remover</h1>\n      </div>   \n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Consultar.css\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n\n    return (\n      <div >\n        <h1>Consultar</h1>\n      </div>   \n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Edit.css\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  render() {\n\n    return (\n      <div >\n        <h1>Editar</h1>\n      </div>   \n    );\n  }\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Login from \"./containers/Login\";\nimport Profile from \"./containers/Profile\";\nimport Logout from \"./containers/Logout\";\nimport FichaTecnica from \"./containers/FichaTecnica\";\nimport Menu from \"./containers/Managing/Menu\";\nimport Add from \"./containers/Managing/Add\";\nimport Remove from \"./containers/Managing/Remove\";\nimport Consultar from \"./containers/Managing/Consultar\";\nimport Edit from \"./containers/Managing/Edit\";\n\nexport default () =>\n  <Switch>\n    <Route path=\"/\" exact component={Login} />\n    <Route path=\"/login\" exact component={Login} />\n    <Route path=\"/profile\" exact component={Profile} />\n    <Route path=\"/logout\" exact component={Logout} />\n    <Route path=\"/fichatecnica\" exact component={FichaTecnica} />\n    <Route path=\"/menu\" exact component={Menu} />\n    <Route path=\"/add\" exact component={Add} />\n    <Route path=\"/remove\" exact component={Remove} />\n    <Route path=\"/consultar\" exact component={Consultar} />\n    <Route path=\"/edit\" exact component={Edit} />\n  </Switch>;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Routes from \"./Routes\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Routes />\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n    document.getElementById(\"root\")\n  );\n  \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}